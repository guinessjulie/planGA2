
랜덤 시드셀 배치 및 돌출셀 최적화 기법을 적용한 자동화 평면 배치 생성 및 최적화 연구
 
Automated Floor Plan Generation and Optimization Using Random Seed-Cell Placement and Protruding Cell Optimization

 

………………………………………………………………………………………………………………………
Abstract
In architectural design, space layout plays a crucial role in fulfilling functional requirements and optimizing user experience. Traditional spatial layouts have primarily relied on the designer’s intuition, but the introduction of automated design tools and optimization algorithms has significantly improved design efficiency. This study proposes a floor plan generation and optimization algorithm that combines random seed-cell placement with a protruding cell optimization technique. Random seed-cell placement randomly assigns room positions at the initial design stage, allowing for the exploration of diverse design alternatives, while the protruding cell optimization technique removes unnecessary protruding cells from the floor plan to maximize space efficiency. Experiments were conducted using the Python-based PlanGen program, and performance metrics such as room size, adjacency, and orientation were used to evaluate the design performance. This study provides a concrete methodology for the practical application of automated floor plan generation and optimization in architectural design and suggests strategic approaches for improving design performance.
………………………………………………………………………………………………………………………
키워드 : 건축설계, 공간배치, 자동화설계, 최적화기법
Keywords : Architectural Desig, Space Layout, Automated Design, Optimization Techniques, 
………………………………………………………………………………………………………………………
1. 서론
1.1 연구 배경
건축 설계에서 공간 배치의 효율성은 건물의 기능적 요구를 충족시키고 사용자 경험을 최적화하는 중요한 과정이다. 특히 주거 공간과 상업 공간 설계에서 평면도 구성은 설계의 전체적 품질을 좌우하는 핵심 요소로 인식된다. 기존의 공간 배치는 설계자의 경험과 직관에 크게 의존해왔으나, 이는 설계 과정의 반복성과 복잡성으로 인해 다양한 요구사항을 신속하게 반영하기 어렵다는 한계가 있다. 최근의 설계 방식은 컴퓨터를 활용한 자동화 및 최적화 기술을 도입하여 설계 속도와 정확성을 크게 향상시키고 있다.
특히, 평면도를 생성하고 이를 최적화하는 자동화 알고리즘은 방 배치, 면적 요구, 인접성, 방향성 등의 다양한 설계 요구사항을 동시에 고려할 수 있어 설계 효율성을 극대화할 수 있다. 이러한 알고리즘은 복잡한 설계 문제를 빠르고 정확하게 해결하며, 설계자가 개입하지 않아도 다양한 설계안을 생성할 수 있는 장점을 지닌다. 이는 설계자가 보다 창의적인 부분에 집중할 수 있는 환경을 제공하며, 다양한 설계안을 자동으로 생성해 다각도로 비교 분석할 수 있는 방법을 제공한다.
1.2 연구 목적
본 연구의 목적은 자동화된 평면도 생성 알고리즘을 통해 공간 배치 성능을 평가하고, 이를 최적화하는 방안을 제시하는 데 있다. 특히 본 연구는 랜덤한 시드 셀 배치(seed-cell placement)를 사용하여 평면도를 생성하고, 생성된 평면도를 돌출 셀 최적화 기법(protruding cell optimization)을 통해 공간의 효율성을 높이는 방식으로 접근한다.
시드 셀 배치는 평면도 설계의 초기 조건으로, 각 방의 위치와 크기를 결정하는 데 중요한 역할을 한다. 본 연구에서는 이 시드 셀 배치를 무작위하게 설정하는 방식을 채택한다. 그 이유는 임의 시드 셀 배치가 고정된 패턴 없이 다양한 설계 가능성을 탐색할 수 있도록 하여, 설계안의 다양성을 극대화할 수 있기 때문이다. 다양한 시드 셀 배치를 통해 보다 많은 설계안이 생성될 수 있으며, 이를 기반으로 최적의 평면도를 도출할 수 있는 가능성이 커진다. 이와 함께 돌출 셀 최적화 기법을 적용하여 설계 과정에서 발생하는 불필요한 공간을 제거하고, 보다 간결하고 효율적인 평면도를 생성한다
1.3 연구의 필요성
건축 설계에서 평면도를 자동으로 생성하고 최적화하는 연구는 설계 시간의 단축과 설계 품질의 향상에 기여할 수 있다. 특히, 방 크기, 인접성, 방향성 등의 다양한 요구 조건을 동시에 만족시키는 평면도 설계는 반복적인 작업을 수반하기 때문에 자동화의 필요성이 크다. 본 연구에서 적용하는 랜덤한 시드 셀 배치는 기존의 고정적이고 제한적인 배치 방법과 달리, 설계의 무작위성을 도입하여 더욱 다양한 설계안을 생성하고 비교할 수 있는 기회를 제공한다. 이는 고정된 방식으로는 발견할 수 없었던 설계안들을 탐색할 수 있게 하며, 자동화된 설계에서 중요한 역할을 한다.
또한, 랜덤 배치된 시드 셀이 생성하는 다양한 설계안을 분석하고 최적화하는 과정에서 돌출 셀 최적화 기법을 통해, 설계의 복잡성을 줄이고 실용적인 설계안을 도출할 수 있는 구체적인 방법론을 제시하는 데 연구의 필요성이 있다. 이를 통해 설계 효율을 향상시키고, 결과적으로 설계 품질을 개선할 수 있는 실질적인 기여를 하고자 한다.
1.4 연구의 범위
본 연구는 파이썬 기반의 PlanGen 프로그램을 사용하여 방 크기, 인접성, 방향성 등의 요구 조건을 반영한 자동화된 평면도 생성 알고리즘을 개발하고, 이를 통해 생성된 평면도의 성능을 평가한다. 연구의 범위는 다음과 같다:
1. 시드 셀 배치: 평면도 설계의 출발점으로, 각 방의 초기 위치를 랜덤하게 배치하여 설계안을 다양화하고, 이를 바탕으로 최적의 설계안을 도출하는 전략을 적용한다.
2. 돌출 셀 최적화 기법: 랜덤 배치된 방들의 배치 중 불필요하게 돌출된 셀을 제거하여, 평면도를 단순화하고 효율적으로 조정하는 과정을 포함한다.
3. 최적화 전략: 크기 최적화(Size Optimization), 인접성 우선 할당(Adjacency Prioritization), 방향성 우선 할당(Orientation Prioritization) 등의 전략을 사용하여 설계 성능을 개선한다.
1.5 논문의 구성
본 논문은 다음과 같은 구조로 이루어져 있다. 2장에서는 관련 연구와 기존 문헌을 검토하며, 3장에서는 연구에서 사용한 평면도 생성 알고리즘을 설명한다. 4장에서는 설계 성능 평가를 위한 지표와 방법을 제시하며, 5장에서는 각 최적화 전략의 성능 분석 결과를 다룬다. 마지막으로, 6장에서는 PlanGen 프로그램을 통해 생성된 실제 평면도 사례를 제시하고, 이를 바탕으로 최적화 전략의 실질적 효과를 논의한다.
실제로 존재하는 논문을 바탕으로 문헌 검토 내용을 수정한 후, 이에 따른 정확한 참고문헌 목록을 제공하겠습니다. 평면도 설계, 시드 셀 배치, 최적화 알고리즘, 돌출 셀 최적화와 관련된 주제를 다룬 논문들을 실제로 존재하는 자료를 바탕으로 다듬겠습니다.
2. 문헌 검토
2.1 평면도 설계 자동화
건축 설계에서 자동화는 공간 배치를 효율적으로 생성하고 최적화하는 중요한 도구로 자리잡고 있다. 특히 건물의 복잡한 요구 사항을 충족시키는 최적화 알고리즘은 설계 속도와 정확성을 크게 향상시킬 수 있다. 자동화된 공간 배치 설계에서 중요한 연구 중 하나는 Michalek et al.(2002)의 연구로, 이들은 다목적 최적화 기법을 활용하여 공간 배치 문제를 해결하였다. 또한, Arvin과 House(2002)는 자동화된 설계 도구를 통해 설계자 개입 없이 다양한 설계 대안을 제시하는 방법을 연구하였다.
Hemberg et al.(2013)의 연구는 진화적 알고리즘을 사용하여 복잡한 건축 설계를 해결하고, 다양한 제약 조건을 만족하는 평면도를 생성하는 방법을 제시하였다. 이러한 자동화된 설계 방법들은 건축 설계 과정의 효율성을 높이고 설계의 반복적인 작업에서 설계자를 해방시켜 창의적이고 복잡한 설계 문제를 해결할 수 있는 기반을 제공한다.
본 연구는 이러한 평면도 설계 자동화의 흐름을 기반으로 하여, 파이썬 기반의 PlanGen 프로그램을 활용해 평면도를 자동으로 생성하고, 각 방의 요구사항을 만족시키는 최적화 기법을 결합한다. 기존 연구에서 주로 다룬 자동화된 설계 도구와 차별화된 점은 시드 셀 배치와 돌출 셀 최적화 기법을 통한 공간 배치 효율성의 향상이다.
2.2 시드 셀 배치
시드 셀 배치는 초기 방의 위치를 결정하는 중요한 요소로, 전체 설계 결과에 큰 영향을 미친다. Eiben et al.(2007)은 임의 시드 배치가 설계 다양성을 확보하는 데 중요한 역할을 한다고 언급하였으며, 이는 설계가 고정된 패턴에 제한되지 않고 다양한 가능성을 탐색할 수 있도록 한다. 자동화된 설계 시스템에서 시드 배치는 초기 설계 단계에서 주요한 결정으로, 이를 통해 생성된 평면도의 품질이 달라진다.
Schumacher et al.(2010)은 공간 배치에서 시드 셀을 적절히 배치함으로써, 복잡한 설계 문제를 보다 효율적으로 해결할 수 있음을 보였다. 이들은 랜덤한 시드 배치를 통해 고정된 패턴이 아닌 설계 가능성의 범위를 확장할 수 있다고 주장한다.
본 연구에서는 랜덤 시드 셀 배치 방식을 채택하여 다양한 설계안을 생성하고, 각 시드 셀이 설계에 미치는 영향을 분석한다. 이를 통해 다양한 설계 대안을 탐색하고, 최적화 기법을 통해 최종 설계 성능을 개선하는 전략을 제안한다.
2.3 돌출 셀 최적화 기법
돌출 셀은 평면도의 비효율적인 공간을 의미하며, 이는 건축 설계의 복잡성을 증가시키고 공간 활용도를 낮춘다. 이를 해결하기 위해 Wang et al.(2013)은 돌출된 공간을 최적화하여 평면도를 단순화하는 기법을 제안하였다. 이러한 기법은 공간 효율성을 향상시키며, 불필요한 돌출 부분을 제거하여 설계의 실용성을 높이는 데 기여한다.
본 연구에서는 돌출 셀 최적화 기법을 통해 평면도에서 불필요하게 돌출된 공간을 자동으로 감지하고 제거하는 방법을 제시한다. 이 기법을 통해 복잡한 설계를 단순화하고, 공간의 활용도를 극대화하여 설계 성능을 개선하고자 한다.
2.4 최적화 알고리즘

건축 설계에서 최적화 알고리즘은 공간 배치의 다양한 요구를 동시에 만족시키는 데 중요한 도구로 사용된다. 대표적인 알고리즘 중 하나는 진화적 알고리즘으로, 이는 복잡한 제약 조건을 만족하면서도 설계 효율을 높일 수 있는 방법으로 널리 활용되고 있다. Deb et al.(2002)은 다목적 유전 알고리즘(NSGA-II)을 사용하여 다수의 목표를 최적화하는 방법을 제시하였다.
최적화 알고리즘을 사용한 설계 자동화는 크기 최적화, 인접성 우선 할당, 방향성 우선 할당 등 다양한 전략을 통해 설계 성능을 개선하는 데 기여한다. Turrin et al.(2011)은 건축 설계에서 유전 알고리즘을 사용하여 다양한 요구 사항을 만족하는 최적 설계를 도출하는 연구를 진행하였다.
본 연구는 이러한 최적화 알고리즘을 기반으로 크기, 인접성, 방향성 등의 요구 사항을 만족하는 평면도를 자동으로 생성하고, 이를 바탕으로 설계 성능을 평가하는 전략을 제시한다.
3. 평면 배치 자동 생성 알고리즘
3.1 초기 위치 설정
건축 평면을 생성하기 위한 설계 공간 Gfootprint는 m x n 크기의 격자로 구성된 2차원 공간으로, 내부 공간을 정의하는 배열로 표현된다(Figure 1 (a) 참조).

건축 평면 생성은 설계 공간 내 모든 셀을 방에 할당하는 것을 목표로 한다. 각 셀은 설계 공간의 최소 단위로, 사용자 정의 크기를 갖는다(이 연구에서는 셀의 크기를 1m2로 설정하였다). 각 방은 특정 시드 셀에서 시작해 인접 셀로 확장되며, 이 초기 시드 셀의 위치를 결정하는 방식은 다음과 같다.
1. 임의 위치 선택: 설계 공간 Gfootprint에서 k개의 시드 셀 si를 무작위로 선택한다.
   
시드 셀 집합 S는 각 방의 시작 위치를 나타내며, 초기에는 방 번호가 할당되지 않은 상태로 특정 값(255)으로 표시된다.
2. 방 번호 할당: 시드 셀 si에 고유한 방 번호 i를 할당하여 초기 설계 공간 Ginit을 구성한다(Figure 1 (b)).

여기서: 
● Gfootprint는 내부 공간을 나타내는 영역이며, 시드 셀 si는 방 번호 i를 할당받는다. 
● 값이 0인 셀은 아직 방 번호가 할당되지 않은 셀을 의미하며, 내부 공간이 아닌 셀은 -1로 마스킹된다.
방 번호가 할당된 시드 셀은 이후 방 배치의 출발점이 되며, 시드 셀의 위치는 최종 방 배치를 좌우한다. 본 연구에서는 초기 시드 셀을 할당하는 세 가지 방식을 제안한다: 방향 우선 할당, 인접성 우선 할당, 임의 할당 



Figure 1. An Input foot print layout (a) and an room allocations of seed cells(b)  

3.1.1 방향 우선 시드 셀 할당
방향 우선 할당은 방의 방향을 지정하는 요구를 반영하여 시드 셀을 할당하는 방법이다. 방향 요구사항은 방 ri와 요구되는 방향 oi의 쌍으로 구성된 목록으로 다음과 같이 표현된다. 

방 ri의 시드 셀 si는 방 ri가 요구된 방향 oi에 배치되기에 가장 유리한 위치에 할당된다. 이때 유리한 위치란, 시드 셀이 설계 공간의 경계면에서 요구된 방향 oi에 가장 가까운 위치를 의미한다. 각 시드 셀의 좌표 x, y를 기준으로 정렬되어 동서남북 네 방향의 방향 스코어 리스트 Sco가 생성된다. 방 i의 시드 셀 si는 방 ri가 요구되는 방향 oi의 스코어 리스트에서 가장 높은 값을 갖는 셀로 선택된다. 이는 다음과 같이 나타낼 수 있다.

이 때 스코어 Sco는 시드 셀이 설계 공간에서 해당 방향(oi)의 경계면으로부터 얼마나 가까운지를 나타낸다.

3.1.2 인접성 우선 시드 셀 할당
인접성 우선 할당은 인접해야 하는 두 방의 시드 셀을 가능한 한 가까이 배치함으로써 방들 간의 인접성을 향상시키는 전략이다. 인접성은 방들 간의 관계를 나타내는 이항 관계로 정의되며, 인접성 요구사항은 방 ri와 인접해야 하는 방 rj의 인덱스 쌍 (ri, rj) 의 집합으로 표현된다.

인접성 우선 할당 방식의 목표는 시드 셀 si가 미할당 시드 셀 중에서 방 rj의 시드 셀 sj와 가장 가까운 위치를 선택하는 것이다. 이를 통해 방 ri와 방 rj가 인접하게 배치될 가능성을 극대화한다. 

여기서 di,j는 방 ri와 방 rj 사이의 맨해튼 거리를 나타내며, 이는 두 시드 셀 간의 직교 좌표계에서의 이동 거리로 정의된다.
3.1.3 임의 배치
인접 및 방향 요구가 없거나 적용하지 않는 경우, 시드 셀은 무작위로 방 번호가 할당된다. 인접 우선 및 방향 우선 방 할당 완료 후 방이 할당되지 않은 잔류 시드 셀도 임의의 방 번호로 설정되며, 이를 통해 초기 배치가 완료된다.
3.2 평면도 생성 과정
3.2.1 평면도 생성 알고리즘 개요
건축 평면의 배치 알고리즘은 시드 셀에 방이 할당된 초기 상태의 그리드 Ginit을 입력받아, 이를 확장하여 각 방의 형태를 형성하고 최종 평면도를 완성한다. 이 단계의 목표는 다음의 기하학적 조건을 충족시키는 것이다.  
1. 모든 방에 최소 공간 할당: 각 방은 최소한 하나의 셀을 할당받는다.
2. 방 분할 방지: 방이 하나의 연속적인 공간으로 유지되어야 하며, 겹치거나 분리되지 않는다.
3. 빈 공간 제거: 모든 유효 셀은 방에 할당되며, 빈 공간을 남기지 않는다.
4. 설계 공간 내에 배치: 방이 설계 공간을 넘지 않는다.
이 과정에서 평면도가 생성되면, 초기 설계 공간 Ginit의 모든 유효 셀(즉, 내부 공간을 나타내는 셀)에 방 번호가 할당된 상태로 최종적으로 결정된다. 이를 새로운 평면도 그리드 F로 정의한다.
3.2.2 경계 셀 확장 방식
방 배치는 경계 셀 중 하나를 선택하고, 그에 인접한 셀을 확장하는 방식으로 이루어진다. 선택된 셀의 방향에 따라 평행한 인접 셀들도 함께 확장된다. 이러한 방식은 방의 형태가 불규칙하게 형성되는 것을 방지하고, 방의 외곽이 일관된 형태를 유지하도록 한다.

여기서 방 ri의 경계 셀 목록 B(ri)는 하나 이상의 미할당 셀을 인접 셀로 가진 셀이다. bi는 방 ri의 경계 셀 중에서 무작위로 선택된다. 선택된 경계 셀 bi에 인접한 미할당 셀들의 집합 adj(bi)에서 무작위로 선택한 셀 snew에 방 ri에 새로 할당한다.

병렬 확장은 bi와 그와 인접한 셀 snew의 위치 관계에 따라, 해당 방향으로 평행하게 확장가능한 셀들을 동시에 확장하는 방식이다. 만약 평행 확장 중간에 다른 방이 배치되어 있지 않다면, 확장은 직각 사각형 형태로 유지되며, 이를 통해 불규칙한 형태의 발생을 방지할 수 있다. 이러한 평행 셀들의 집합 Ppl을 다음과 같이 정의한다.

B(ri)은 확장이 반복될 때마다 갱신된다. 새로 확장된 셀 snew와 병렬 확장된 셀들 Ppl 및 이 셀들과 인접한 셀들에 대해 경계 셀 여부를 확인하여, B(ri)에 추가된다. 기존 경계 셀 목록 중 더 이상 경계 셀이 아닌 셀은 목록에서 제거된다. 이 병렬 확장 과정은 한 번의 반복 동안 모든 방에 대해 수행되며, B(ri)는 각 반복을 통해 지속적으로 갱신된다. 경계 셀 목록이 비워지면 방배치가 완료되고 방 번호로 이루어진 2차원 설계공간 F가 생성된다. Figure 2에 초기화된 8 개의 시드 셀로 시작된 방이 동시에 병렬로 확장되는 과정을 나타내었다. 


Figure 2. Process of Room Allocation from seed cells

3.2.3 최대 면적 우선 확장
최대 면적 우선 확장 방식은 각 방이 사용자가 명시한 최대 면적을 초과하지 않도록 확장 범위를 제한하는 방법이다. 방의 크기 제약 요구는 각 방에 대해 최소 및 최대 허용 면적을 정의한 두 값의 쌍으로 구성된다.

최대 면적 우선 확장에서는 각 방이 확장될 때마다 자신의 면적을 추적하며, 방의 면적이 최대 허용 면적인 Aimax에 도달하면 더 이상 확장하지 않는다. 이 방법은 최대 면적 이상으로 확장하지 않도록 조정하지만, 확장 제한으로 인해 최대 면적에 도달한 방들로 둘러싸인 미활당 공간의 발생 가능성을 남겨놓는다. 이 경우, 미활당 인접한 방들 중 하나의 방으로 할당함으로써 방배치의 기하학적 조건을 충족시킨다. 인접 방의 선택은 임의로 이루어지며, 이를 통해 설계 공간 내의 모든 셀이 방에 할당될 수 있도록 한다. 크기 제약이 설정된 셀 크기 단위로 이루어지므로 병렬 확장 방식은 사용하지 않으며 한 번에 한 셀씩 확장된다. 
3.3 돌출 셀 제거 알고리즘
돌출 셀 제거 알고리즘은 시드 셀 확장으로 생성한 평면 배치 F에서 발생한 돌출 셀을 식별하고, 인접 방과 교환하는 방식이다. 그리드 기반의 방 배치 방식에서, 방 배치는 경계면을 따라 임의로 확장하는 방식으로 이루어지므로 병렬 확장 방식을 적용하더라도, 확장 셀 상호 간 충돌이 발생하면 돌출 셀이 생길 수 있다. 고립된 위치에 있는 이 작은 셀들은 방의 형태를 불규칙하게 만들며, 공간적 비효율성과 함께 평면도의 미적 일관성을 저해한다. 돌출 셀로 인해 생기는 설계의 미적 일관성과 효율성 저해를 개선하기 위해 돌출 셀을 제거하는 추가적인 절차를 도입하였다.
3.3.1 돌출 셀 식별
설계 공간 F의 모든 셀 c에 대해, 그 셀이 3개 이상의 유효하지 않은 셀 또는 다른 방에 인접한 경우 돌출 셀로 간주한다.

여기서: 
● P(c)는 셀 c가 돌출 셀인지 여부를 나타내는 함수.
● V(c)는 셀 c가 유효 여부를 나타내는 함수로, 셀이 설계 공간의 내에 있고 방 번호가 할당된 경우, V(c) = 1이다. 
● N_diff(c)는 셀 c의 인접한 셀 중 유효하지 않거나 다른 방에 속한 셀의 개수를 의미한다.
3.3.2 교환 방 선택
돌출 셀 교환은 돌출 셀을 인접한 다른 방으로 바꾸어 형태를 단순화하는 과정이다. 방 교환이 가능하려면 다음 조건을 만족해야 한다.
● 유효성 유지: 교환 후에 변형된 방 배치는 개별 공간의 연결을 유지해야 하며, 빈 공간이 없어야 한다.
● 교환 기록 추적: 같은 위치의 교환이 반복해서 일어나지 않도록 교환 기록을 추적하여 교착 상태를 피해야 한다.
3.3.3 돌출 셀 교환 알고리즘
돌출 셀 교환 알고리즘은 돌출 셀 pi를 인접한 다른 방 Rj로 교환하여 방의 형태를 개선하는 과정으로 다음 단계를 따른다.
1. 돌출 셀 선택: 돌출 셀 집합 P에서 무작위로 하나의 셀을 선택한다.

2. 인접 방 후보 선택: 선택된 돌출 셀 pi에 인접한 셀들의 방 번호 집합 R(pi)를 찾는다. 이는 pi와 이웃한 방의 셀들을 의미하며, 교환 가능한 후보 방을 추출하는 과정이다.

여기서: 
● R(pi)는 돌출 셀 pi의 방 번호, 
● Adj(pi)는 돌출 셀 pi에 인접한 셀의 좌표 집합, 
● R(Adj(pi))는 인접한 셀 방 번호 집합, 
● Rj ≠ R(pi)는 pi와 인접한 방 중에서 다른 방을 선택하는 조건이다.
3. 최적 후보 방 선택: 각 후보 방과의 교환 후 돌출 셀의 수를 평가하여, 돌출 셀 감소 효과가 가장 큰 방 Rj를 선택한다. 돌출 셀 변화는 다음과 같이 계산된다:

여기서: 
● Pold(pi, Rj)는 교환 이전에 돌출 셀 pi와 이웃한 돌출 셀의 수, 
● Pnew(pi, Rj)는 방 Rj로 교환한 후 발생한 돌출 셀 pi의 수, 
● ΔP(pi, Rj)는 교환 전후의 돌출 셀 수 차이로, 이 값이 클수록 돌출 셀이 크게 감소하는 교환임을 나타낸다.
● ΔP(pi, Rj)를 계산 후, 이 값이 가장 큰 방을 선택하여 해당 셀의 방을 이 방으로 변경한다. 

4. 교환 기록 추적 및 반복: 교환이 성공하면 교환된 셀과 방의 정보를 기록하여 교환 히스토리 목록 업데이트하고, 교환이 가능한 새 후보 방을 탐색한다. 교환이 완료되면 해당 돌출 셀 pi는 목록에서 제거된다. 이 과정을 반복하여 모든 돌출 셀이 제거될 때까지 알고리즘이 진행된다.
Figure 3은 돌출 셀 제거 알고리즘의 단계별 변화를 나타낸 것이다. 1번 배치는 초기 평면 배치의 형태를 보여주며, 단계가 진행됨에 따라 각 방의 돌출 셀이 인접한 다른 방으로 점진적으로 교체되는 과정을 확인할 수 있다. 돌출 셀 제거가 완료된 8단계에서는 계단 현상이 감소하고, 각 방의 형태가 보다 단순화된 평면 배치로 변환된 것을 확인할 수 있다.


Figure 3. Process of Removing Protruding Cells
4. 공간 배치 평가 방법
이 섹션은 생성된 공간 배치를 평가하기 위한 평가 방법을 제시한다. 평가 방법은 사용자가 요구한 세 가지 주요 요구사항(인접성, 면적, 방향성)에 대한 만족도 평가와 각 방의 기하학적 형태에 대한 정량적으로 평가 방법으로 크게 나누어진다. 사용자의 설계 목표에 맞춘 최적화된 공간 배치를 찾기 위해, 세 가지 적합성에 대한 가중치를 적용 가능하다. 
4.1 세 가지 주요 요구사항의 적합도 계산
인접성, 면적, 방향성 요구 사항의 적합도는 각기 독립적으로 평가되며, 세부 계산 방법은 다음과 같다.
4.1.1 인접성 만족도 (Adjacency Satisfaction)
인접성 만족도는 요구된 방들 간의 인접 관계가 얼마나 충족되는지를 평가하는 척도로 정의된다. 각 방 쌍 i와 j에 대해, 인접 요구사항 Reqij∈{0,1} 및 실제 인접 관계 Acij∈{0,1}를 사용하여 만족도를 계산한다. 여기서 Reqij=1은 두 방 i와 j 사이에 인접 요구가 존재함을 의미하며, Acij=1은  두 방이 실제로 인접함을 의미한다. 인접성 만족도는 요구된 인접성을 가진 방 쌍에 대해서만 평가되며, 모든 방 쌍을 고려하지 않는다. 평가 과정은 다음과 같은 단계로 이루어진다.
 인접성 평가 알고리즘
공간 배치에서 각 방의 인접성은 다음과 같은 방법으로 평가된다. 먼저, 너비 우선 탐색(BFS) 방식을 사용하여, F의 모든 셀을 순회하며 각 방의 인접 셀을 기반으로 방들 간의 인접 리스트를 생성한다. BFS 알고리즘은 셀 ci​를 기준으로  상하좌우에 위치한 이웃 셀 adj(ci)의 방 번호 Room(adj(ci))를 확인하여, Room(ci)와 이웃 방 Room(adj(ci))의 인접 관계를 기록한다. 중복 탐지를 방지하기 위해 탐색된 셀들은 기록 관리되며, 각 방의 인접 관계는 BFS 탐색이 완료된 후 인접 리스트 집합 AL에 인접된 두두 방 번호의 쌍 형태로 저장된다.
 인접성 만족도 계산 
요구된 방 쌍 (Reqij=1)에 대해 실제 인접 여부 (Acij=1)을 확인한다. 만족된 요구사항은 요구된 방 쌍 (Reqij=1)의 개수 중 실제 인접 리스트에 존재하는  (ACij=1)인 수로 정의된다. 인접성 만족도는 요구된 인접 요구사항 대비 실제 충족된 비율로 정의되며, 다음 수식으로 표현된다:

4.1.2 면적 만족도 (Size Satisfaction)
면적 만족도는 각 방의 실제 면적이 사용자가 요구한 최소 및 최대 면적 범위 내에 있는지 여부에 따라 결정된다. 면적 만족도는 각 방의 면적 만족 점수 ScoreSzi​의 산술 평균으로 계산되며, ScoreSzi는 다음 세 가지 조건에 따라 결정된다:
1. 면적이 요구 범위 내에 있을 때: 방 i의 실제 면적 Aactual이 최소 면적 Amin과 최대 면적 Amax 사이에 있을 경우, ScoreSzi​=1로 부여된다.
2. 면적이 최소 요구 면적보다 작을 때:  면적 Aactual이 최소 요구 면적 Amin보다 작으면  ScoreSzi​는 Amin에 대한 Aactual 의 비율로 계산된다. 

3. 면적이 최대 요구 면적보다 클 때: 실제 면적 Aactual이 최대 요구 면적 Amax를 초과할 경우, ScoreSzi​는 Aactual에 대한   Amax의 비율로 계산된다. 

이 세 조건을 종합하여 각 방의 면적 만족도를 다음 식으로 계산한다.

 여기서 n은 크기 요구사항이 제시된 방의 총개수를 의미한다. 
4.1.3 방향성 만족도 (Orientation Satisfaction)
방향성 만족도는 각 방이 요구된 방향성을 얼마나 충족하는지 평가한다. 방향 요구사항이 있는 경우, 요구된 방향과 일치하는 경계 면이 존재할 경우 점수가 1로 부여된다. 

즉, 요구된 방향 Di가 방 i의 실제 경계 방향 Di에 포함되어 있으면 ScoreOri = 1, 그렇지 않으면 ScoreOri = 0 이다. 전체 방향성 만족도는 각 방의 적합도 점수 ScoreOri의 평균으로 계산되며, 다음과 같이 표현된다.

여기서 n은 방향 요구가 있는 방의 총 개수이다.
4.2 전체 평면 배치 평가 
생성된 공간 배치의 전체 평가는 사용자 지정 가중 조화 평균을 사용하여 계산한다. 가중 조화 평균은 각 요소의 중요도에 따라 가중치를 부여하고, 값이 낮은 요소가 전체 평균에 더 큰 영향을 미치도록 계산하는 방식이다. 이러한 방식은 특정 요구사항의 만족도가 낮을 경우, 그 요구사항이 전체 평가에 더 큰 영향을 주도록 하여 균형 잡힌 설계를 유도한다(Ostwald와 Dawes, 2018). 

여기서, adj는 인접성 만족도, size는 면적 만족도, ori는 방향성 만족도를 의미하며, wadj, wori, wsize는 각 요구사항에 대해 설정된 가중치이다. 가중치에 따라 특정 요구사항을 전체 적합도 점수에 미치는 영향을 조정하여, 설계 목표에 맞춰 다양한 공간 배치 문제에 최적화된 평가를 수행할 수 있다.
4.3 공간의 형태에 따른 평가 방법
공간의 기하학적 형상 평가를 위해 네 가지 주요 적합도 측정을 사용하였다. 격자 기반의 방 배치를 다각형(Polygon) 구조로 변환하여, 각 방의 기하학적 형상을 보다 정밀하게 평가하였다. 
4.3.1 격자 공간을 다각형으로 변환
각 방의 정교한 기하학적 형상 평가를 위해서는 격자 기반의 공간 배치를 꼭지점 좌표 집합으로 구성된 다각형 구조로 변환한다. 다각형 구조의 기하학적 정보는 건축 모델로의 변환을 용이하게 하여, 배치 현황을 시각적으로 표현하거나, 후속 단계에서의 세밀한 조정을 가능하게 한다. 다각형 구조로 변환하기 위해 각 방의 경계를 형성하는 과정은 다음과 같이 진행된다.  먼저, 각 방을 구성하는 격자 셀의 꼭짓점 좌표를 수집한 후, 이 중 경계를 형성하는 유효한 꼭짓점을 탐색하고 연결하여 다각형의 외곽을 완성한다. 
1. 셀 꼭지점 좌표 필터링: 방 rk에 속한 모든 격자 셀 ci의꼭지점 집합 V(ci)는 다음의 4개의 꼭짓점 좌표로 구성된다. 

rk의 모든 V(c)에 대해, 중복을 포함한 모든 꼭짓점 리스트 L(rk)를 생성한다. 방 rk의 경계를 형성하는 다각형의 꼭지점은 L(rk)의 좌표의 중복 횟수로 결정된다. 꼭짓점 중복 발생 횟수에 따른 해석은 다음과 같다(Figure 4 참조). 
● 1: 다각형의 볼록 코너에서 발생하는 꼭지점.
● 3: 다각형의 오목 코너 에서 발생하는 꼭지점. 
● 2: 다각형의 경계선 상에 위치 셀 코너. 
● 4: 다각형의 내부에 위치한 셀 코너. 
중복 횟수가 1회 또는 3회 발생한 좌표만 남겨서, 이들이 다각형의 경계를 형성하는 최종 좌표 집합이 된다.

2. 다각형 경계 순서 형성: 꼭지점 집합 B가 다각형을 형성하는  순서를 정하기 위해, 좌측 최상단의 좌표를 시작으로, 수평 및 수직 방향을 번갈아 가며 인접 좌표를 선택한다. 먼저 수평 방향으로 현재 선택 좌표와 같은 y 좌표 중 현재 좌표와 가장 가까운 좌표를 찾고, 이후 수직 방향으로 같은 x 좌표에 있는 가장 가까운 점을 선택한다. 이 과정은 수평과 수직 방향을 번갈아 가며 반복되며, 방의 외곽을 따라 경계를 완성하게 된다. 이를 수식으로 표현하면, 주어진 꼭짓점 𝑃𝑖(𝑥𝑖, 𝑦𝑖)에서 가장 가까운 수평 좌표는 다음과 같이 정의된다:

그리고 수직 방향에서 가장 가까운 꼭짓점은 다음과 같다.

경계를 따라서 계속 반복하여, 경계를 완성하는 점의 순서는 다음과 같이 결정된다:


Figure 4. The number of corners with 1 or 3 determines the vertices of the target polygon from the cell set in the grid representation.

다각형의 꼭지점 순서 집합 P에서 중복을 제거하면 다각형이 완성된다. 
 4.3.4 직사각형성(Rectangularity)
직사각형성은 다각형이 얼마나 직사각형에 가까운지를 측정하는 개념으로, 다각형의 경계를 바운딩 박스(Bounding Box, 이하 BB)로 감싸 직사각형에 가까운 정도를 평가한다. BB는 형태를 둘러싸는 최소한의 직사각형으로, xmin≤x≤xmax, ymin≤y≤ymax 범위를 갖는다. 직사각형성은 다각형의 면적과 BB의 면적비로 정의한다. 

여기서, Apolygon은 다각형의 면적을, ABB는 해당 다각형의 BB 면적을 나타낸다.
4.3.5 정규성(Regularity)
정규성은 앞에서 정의한 다각형의 직사각형성과 BB의 종횡비(Aspect Ratio)를 결합하여 평가한다. 

여기서, ARBB는 BB의 가로 길이와 세로 길이의 비율이다. 
4.3.6 둘레-면적 비율(Perimeter-Area Ratio)
둘레-면적 비율(Park and Chang, 2019)은 다각형의 압축성을 평가하는 방식으로, 정사각형을 기준으로 최대값 1을 가지며, 면적대비 경계의 길이가 길어질수록 값이 작아지도록 정의된다.  

여기서, Ppolygon은 다각형의 둘레 길이를 나타낸다. 이 식은 가로세로의 차이가 클수록, 형태가 불규칙할수록 값이 작아진다. 
4.3.7 Simplicity (단순성)
형태의 단순성(Simplicity)은 사각형일 때 최댓값을 갖도록 다음과 같이 계산된다. 

여기서 V는 꼭짓점의 개수를 의미한다.
5. 최적화 전략에 따른 설계 성능 분석
본 장에서는 3장에서 제시한 평면 배치 구성 알고리즘이 다양한 최적화 전략을 통해 설계 성능에 미치는 영향을 분석한다. 이를 위해 제시한 알고리즘을 구현한 애플리케이션 planGen을 활용하여 실험 데이터를 생성하고, 4장에서 정의한 평가 지표들을 바탕으로 다각적인 평가를 수행하였다. 
5.1 요구사항 설정
실험에 사용된 입력 데이터는 planGen을 통해 생성된 방들의 요구사항을 기반으로 한다. 방의 크기, 방향성, 인접성 요구사항은 Figure 5와 Figure 6에 제시된 설정 화면을 통해 정의되었다. 본 장에서는 최적화 전략이 방 배치 성능에 미치는 영향을 집중적으로 다룬다.
5.2 기초 통계 분석
총 2000개의 평면도를 생성하여 세 가지 주요 최적화 전략을 적용한 결과를 분석하였다. 각 전략의 적용 여부는 무작위로 결정되었으며, 결과는 Table 1과 같다. 
● 
Metric
mean
std
min
25%
50%
75%
max
Adjacency
0.46
0.20
0.00
0.40
0.40
0.60
1.00
Orientation
0.73
0.30
0.00
0.50
0.75
1.00
1.00
Size
0.77
0.12
0.36
0.68
0.78
0.87
1.00
Simplicity
0.72
0.08
0.52
0.67
0.72
0.77
0.96
Rectangularity
0.86
0.05
0.68
0.83
0.86
0.90
0.99
Regularity
0.60
0.07
0.37
0.56
0.60
0.65
0.89
PA Ratio
0.80
0.05
0.61
0.77
0.80
0.84
0.97
Weighted_Fitness
0.51
0.20
0.00
0.39
0.53
0.67
0.99
* Rounded to two decimal places for convenience.
Table 1. Table 5 Summary of Key Fitness Metrics
Adjacency (인접성 만족도): 평균 0.46으로, 인접성 요구 사항이 다소 낮았다. 분포는 넓게 퍼져 있으며 일부 설계는 0에 가까운 값을 보였다. 
● Orientation (방향성 만족도): 평균 0.73로, 방향성 요구사항은 대체로 충족되었으며 상위 25%는 거의 완벽한 성능을 보였다.
● Size (크기 만족도): 평균 0.77, 75% 방크기 요구사항은 대부분 잘 충족되었다. 크기 요구 사항이 범위로 설정되어  높은 만족도를 보인 것으로 분석된다. 
● Simplicity (단순성): 평균 0.72로 전체적으로 낮은 분산에서 비슷한 수준의 단순성을 유지하고 있어, 셀 확장 과정에서 적용된 알고리즘이 잘 작동하고 있음을 보여준다. 
● Rectangularity (직사각형 비율): 평균 0.861로, 방 형태가 규칙적인 직사각형에 가까움을 보여준다. 분포의 편차가 작아, 안정적인 설계 형태가 나타났다.
● Regularity (규칙성): 평균 0.60으로, 방의 패턴이 일정한 규칙성을 보이고 있다.
● PA Ratio (PA 비율): 평균 0.80으로, 면적 대비 외형적인 효율성을 잘 유지하고 있다.
● Weighted Fitness (가중 평균): 평균 0.51로, 적합도는 중간 이상의 수준을 기록했으나, 일부 설계에서는 매우 낮은 값이 나타났다.
5.3 시드 셀의 영향 분석
설계 초기 시드 셀 배치가 설계 성능에 미치는 영향을 분석하기 위해 100개의 시드 배치를 생성하고, 각 시드 배치마다 100개의 평면도를 분석하였다. Levene Test와 ANOVA 분석 결과, 시드 셀 배치가 설계 성능에 중요한 영향을 미치는 것으로 나타났다(Table 2 참조). 
● 
Table 2. ANOVA and Levene Test Results for Fitness Metrics to Assess Significance of Differences Between Seed-cell Groups.
Fitness
Levene Test p-value
F-Value
df
p-value 
(ANOVA)
Adjacency
0.000
104.53
(99, 9800)
0.000
Size
0.000
28.33
(99, 9800)
0.000
Orientation
0.000
513.57
(99, 9800)
0.000
Simplicity
0.000
513.57
(99, 9800)
0.000
Regularity
0.000
513.57
(99, 9800)
0.000
PA Ratio
0.000
13.31
(99, 9800)
0.000
Adjacency, Orientation, Simplicity, Regularity 지표는 시드 배치에 의해 큰 영향을 받았으며, 서로 다른 시드 그룹 간의 변동이 동일 시드 그룹 내 변동보다 매우 크게 나타났다. 이는 각 방의 시드 셀의 위치가 설계 성능에 상당한 영향을 미친다는 것을 확인할 수 있었다.
● Size와 PA Ratio 지표의 상대적으로 시드 배치의 영향을 덜 받았으나 여전히 통계적으로 유의미한 차이를 보였다. 
5.4 최적화 설계 전략이 평면 배치 성능에 미치는 영향
세 가지 최적화 전략인 크기 최적화(Size_Opt), 인접성 우선 할당(Adj_Opt), 방향 우선 할당(Ori_Opt)이 설계 성능에 미치는 영향을 분석하였다(Table 3). 

Table 3. Performance Impact of Optimization Strategies on Design Satisfaction Metrics (Orientation, Adjacency, and Size). 
Strategy
Satisfaction
Metric
Applied
Not
Applied
Improvement (%)
p-value
Sample Size (n)
Ori_Opt
Orientation 
0.944
0.468
50.4
< 0.001
1110 / 890
Adj_Opt
Adjacency 
0.481
0.439
8.7
< 0.01
920 / 1080
Size_Opt  
Size 
0.855
0.684
19.9
< 0.001
1000 / 1000

● 방향성 만족도: 방향 우선 할당이 적용된 경우(0.944)가 비적용(0.468)에 비해 약 50.4% 더 높은 만족도를 보였다(p < 0.001).
● 인접성 만족도: 인접 우선 할당이 적용된 경우(0.481)가 비적용(0.439)에 비해 약 8.7% 향상되었으나, 그 영향은 상대적으로 작았다(p < 0.01).
● 크기 만족도: 크기 최적화 적용 시(0.855)가 비적용 시(0.684)에 비해 19.9% 향상되었으며(p < 0.001), 크기 제약 조건이 중요한 역할을 했음을 보여준다.
5.5 최적화 변수와 각 적합성 간의 상관관계 분석
세 가지 최적화 변수와 개별 요구사항 만족도에 따른 적합성 지표 및 형태 지표에 미치는 영향을 분석한 결과는 Table 4에 나타나 있다. 크기 최적화(Size_Opt)는 크기 적합성(Size) 지표와 매우 높은 상관관계(0.696, p < 0.001)를 보였으나, 단순성, 직사각형성, PA Ratio에서는 음의 상관관계를 보여, 크기 제약이 공간의 복잡성을 증가시키고, 정형화된 방 형태를 유지하기 어렵게 할 수 있음을 시사했다. 
인접성 우선 할당(Adj_Opt)은 인접성 만족도지표와 약간의 양의 상관관계(0.107)를 나타냈다(p < 0.001). 방향 우선 할당(Ori_Opt)은 방향성 적합성 지표와 매우 강한 양의 상관관계(0.792, p < 0.001)를 보여 방향성 요구 충족에 매우 효과적인 전략임을 확인할 수 있었다. 결과적으로 세 가지 최적화 방식은 해당 만족도에서 유의미한 성능 향상을 보였으나, 방의 형태에 대한 네 지표에서는 Size_Opt에 대한 영향을 피할 수는 없었다. 따라서 요구사항 상호 간의 조율 및 최적화 전략 간의 상호작용을 고려한 보다 정교한 설계 전략이 필요하다.
5.6 최적화 전략 간의 상호작용 분석
최적화 전략 간의 상호작용을 분석하기 위해, 각 전략이 독립적으로 적용된 경우와 복합적으로 적용된 경우의 성능을 비교하였다(Table 5). 각 전략이 성능 지표에 미치는 영향은 독립적으로 나타나는 경우가 많았다. 
5.6.2 요구사항 만족도 상호작용 
먼저 요구사항 만족도가 해당 최적화 전략의 상호 작용을 통해 평가 성능을 어떻게 변화시키는지 분석하였다. 
1. 크기 최적화(Size_Opt): 다른 최적화 전략과 상호작용이 거의 없는 독립적인 성향을 보였다. 크기 최적화만 적용된 경우에도 만족도는 매우 높게 나타났다.
2. 인접 우선 할당(Adj_Opt): 크기 최적화와 함께 사용된 경우, 인접성 만족도가 약간 개선되었으나 그 효과는 제한적이었다. 일부 사례에서는 인접성 만족도가 0인 경우도 있었으며, 이는 인접 우선 할당 전략의 효율성이 제한적일 수 있음을 시사한다.
3. 방향 우선 할당(Ori_Opt): 크기 최적화와 함께 적용될 때 일관되게 긍정적인 영향을 미쳤으며, 독립적으로도 평균 방향성 만족도에서 매우 높은 만족도를 보였다.
5.6.2 그룹별 최적화 전략의 형태 영향력 분석
최적화 전략의 조합에 따라 방 형태의 설계 성능에 뚜렷한 차이가 나타났다(Table 6). 단순성(Simplicity), 직사각형성(Rectangularity), PA Ratio 지표는 크기 최적화(Size_Opt)에 의해 일관되게 부정적인 영향을 받았으며, 다른 전략 그룹과의 조합에 따른 영향은 미미하게 나타났다.

Table 4. Correlation Matrix Between Optimization Variables and Fitness Metrics
Optimization Strategy
Adjacency
Orientation
Size

Simplicity
Rectangularity

Regularity

PA Ratio
Weighted Fitness
Size_Opt 
0.094
-0.056*
0.696***
-0.382***
-0.469***
0.031
-0.408***
0.109***
Adj_Opt
0.107***
0.017
0.104***
-0.024
-0.051*
-0.040
-0.062**
0.101***
Ori_Opt
-0.001
0.792***
-0.024
0.002
0.008
0.030
0.020
0.306***
p-value Legend: *p < 0.05, **p < 0.01, ***p < 0.001, No asterisk: Not significant (p > 0.05)

Table 5. Performance of Optimization Strategies Based on Group Interaction Analysis 
optimization
Strategy
freq-
enceis
Size
Adjacency
Orientation
Weighted_Fitness
size_opt
adj_
opt
ori_
opt
mean
std
min
max
mean
std
min
max
mean
std
min
max
mean
std
min
max
0
0
0
240
0.69
0.088
0.445
0.894
0.428
0.181
0
0.8
0.45
0.236
0
1
0.399
0.19
0
0.718
0
0
1
370
0.693
0.094
0.418
0.928
0.438
0.195
0
1
0.958
0.093
0.75
1
0.538
0.185
0
0.924
0
1
0
190
0.675
0.106
0.394
0.917
0.44
0.19
0
0.8
0.501
0.254
0
1
0.434
0.198
0
0.833
0
1
1
200
0.672
0.083
0.365
0.928
0.461
0.182
0
1
0.958
0.097
0.5
1
0.559
0.147
0
0.947
1
0
0
230
0.852
0.079
0.563
1
0.447
0.203
0
1
0.437
0.238
0
1
0.438
0.222
0
0.985
1
0
1
240
0.836
0.089
0.546
1
0.447
0.191
0
1
0.929
0.126
0.5
1
0.568
0.185
0
0.978
1
1
0
230
0.861
0.075
0.595
1
0.519
0.203
0
1
0.491
0.24
0
1
0.495
0.205
0
0.847
1
1
1
300
0.867
0.083
0.607
1
0.492
0.201
0
0.8
0.93
0.131
0.5
1
0.609
0.196
0
0.889


Table 6. Impact of Optimization Strategies on Design Performance Metrics (Simplicity, Rectangularity, Regularity, PA Ratio)
optimization
Strategy
Simplicity
Rectangularity
Regularity
PA_Ratio
Size_Opt
Adj_Opt
Ori_Opt
mean
std
min
max
mean
std
min
max
mean
std
min
max
mean
std
min
max
0
0
0
0.741
0.081
0.542
0.958
0.88
0.044
0.736
0.979
0.588
0.069
0.423
0.799
0.816
0.044
0.686
0.937
0
0
1
0.753
0.077
0.517
0.958
0.887
0.04
0.773
0.979
0.614
0.07
0.365
0.893
0.831
0.043
0.641
0.953
0
1
0
0.76
0.071
0.546
0.925
0.887
0.041
0.78
0.959
0.6
0.067
0.4
0.841
0.824
0.042
0.705
0.927
0
1
1
0.747
0.078
0.573
0.958
0.88
0.045
0.722
0.992
0.598
0.071
0.455
0.796
0.821
0.046
0.672
0.966
1
0
0
0.692
0.061
0.538
0.883
0.838
0.042
0.679
0.935
0.612
0.06
0.456
0.766
0.787
0.046
0.64
0.904
1
0
1
0.689
0.061
0.544
0.854
0.835
0.044
0.696
0.981
0.608
0.069
0.444
0.784
0.78
0.047
0.626
0.916
1
1
0
0.698
0.063
0.523
0.869
0.843
0.043
0.689
0.944
0.607
0.071
0.398
0.798
0.789
0.046
0.609
0.901
1
1
1
0.692
0.059
0.525
0.875
0.838
0.044
0.703
0.969
0.599
0.067
0.413
0.814
0.782
0.044
0.654
0.89





1. 가중평균: 가중 평균은 각각 크기 만족도, 인접성 만족도, 방향 만족도 중 인접도 만족도에 2배의 가중치 둔 평균으로, 세 최적화 전략 모두 사용하였을 때 가장 높게 (0.609)을 나타났으며, 모두 사용하지 않았을 때 가장 낮은 값(0.399)를 보였다. 결과적으로 세 가지 전략의 조합이 더 많이 함께 사용되었을수록 때 전체적으로 가중 평균의 값이 높아지는 영향을 관찰할 수 있었다. 
5.6.3 그룹별 최적화 전략의 형태 영향력 분석
최적화 전략의 조합에 따라 방 형태의 설계 성능에 뚜렷한 차이를 확인할 수 있었다(Table 6). 단순성(Simplicity), 직사각형성(Rectangularity), PA Ratio 세 개의 형태 성능은 일관되게 크기 최적화에 의해 부정적인 영향을 받고 있음이 뚜렷하게 나타났으며, 다른 전략 그룹과의 조합 적용의 영향은 미미하게 나타났다. 
6. PlanGen을 통한 평면배치 자동생성
6.1 PlanGEN 개요
본 연구에서 개발된 PlanGEN은 건축 설계의 개념 설계 과정에서 요구되는 평면 배치를 자동으로 생성하는 프로그램으로, 다양한 사용자 요구사항을 기반으로 효율적인 공간 배치를 탐색하고 최적화하는 알고리즘을 구현하였다. PlanGEN은 사용자로부터 설계 공간과 세 가지 주요 요구사항을 입력받아 이를 바탕으로 다양한 평면 배치를 생성한다. 평면도의 최적화를 위해 본 연구에서 개발한 세 가지 핵심 알고리즘인 시드 셀 배치, 확장, 돌출 셀 최적화 기법이 순차적으로 적용된다.
PlanGEN은 직각 사각형뿐만 아니라 복잡한 굴곡을 가진 직교 폴리건 형태의 건축 배치도 지원하며, 방의 개수 및 종류에 대한 제약이 없다. 그리드 공간에서 각 셀의 크기는 사용자가 자유롭게 정의할 수 있어 세밀한 크기 조정과 신속한 배치 옵션 중에서 선택할 수 있다. 본 연구에서는 각 셀의 변 길이를 1m로 설정하여 셀당 면적을 1m²가 되도록 하였다. 
6.1 설정 인터페이스
PlanGen의 설정 인터페이스는 애플리케이션 동작 설정 인터페이스와 요구사항 설정 인터페이스로 구분된다. 애플리케이션 인터페이스에는 [Room Names], [Running Option], [Metrics]의 세 그룹이 있으며(Figure 5 참조), [Room Names]에서는 각 방에 고유 이름을 부여할 수 있다. 본 연구의 예시에서는 평면 배치상에 표시가 용이하도록 약어로 표기하였다. Running Option 창에서는 평면 배치 생성 시 시드별 생성 개수, 고요 모드 등의 프로그램 실행 관련 세부 사항을 설정할 수 있다. Metrics 창에서는 셀의 크기, 방의 개수, 벽의 두께, 최적해 도출을 위한 문턱값 및 최대 반복 횟수를 설정할 수 있다.


(a) Room Names Interface


(b) Running Option


(c) Metrics 

Figure 5. Example of Settings Interface in PlanGEN

 세 개의 사용자 요구사항 설정 창에서는, 공통적으로 [Add Room] 버튼을 눌러 방을 선택한 후 해당 방의 요구사항을 선택하여, [Save] 버튼을 누르면 간단하게 설정이 완료된다(Figure 5 참조). 
1. Orientation 창: 각 방의 최소 한 면이 외부의 특정 방향과 면하도록 하여, 창문이나 개구부를 배치하기 위한 요구사항 설정이다. Figure 5(b)의 예시는 거실(LV)을 남향으로, 식당(DN)과 부엌(KT)을 북향으로, 그리고 침실1(BED1)을 서향에 배치하도록 요구사항을 설정한 예시이다. 
2. Size 창: 각 방의 면적 범위를 지정하는 기능을 제공한다. 방을 선택한 후 최소 및 최대 크기를 제곱미터(m²) 단위로 입력한다. Figure 5의 (c)의 예시는, 욕실(BT1, BT2)의 크기 범위를 최소 2m2에서 최대 6m2로 제한하고 침실1과 손님방(GR), 식당, 그리고 거실을 적정한 크기로 설정한 예시를 보여준다. 
3. Adjacency 창: 두 개의 방이 상호 인접하게 배치되도록 지정하는 기능이다. Figure 5(a)의 예시는 거실을 식당, 침실 1, 욕실 1과 인접하게, 식당은 부엌과 인접하게, 침실 2는 욕실 2와 인접하게 배치하는 요구사항을 설정한 예시이다. 
입력된 요구사항 및 동작 옵션을 기반으로, PlanGen은 평면 배치를 개별 또는 배치 모드로 자동 생성하며, 생성된 평면 배치는 저장과 불러오기 기능을 통해 후속 검토가 가능하다. 시드와 평면 배치는 바이너리 파일 형태로 저장되어 다시 검토할 수 있으며, 평면 배치는 그림 파일과 CAD 도면 형식으로 저장할 수 있어, 후속 건축 디자인 단계에서 활용할 수 있다. 
6.3 평면배치 생성 과정
요구사항이 입력되면 PlanGen은 평면 배치 화면에서 실시간으로 평면 배치를 생성할 수 있다. 이 과정은 3장에서 설명된 알고리즘에 기반하여 네 가지 핵심 단계를 거친다. 먼저, 설계 공간에서 방의 개수만큼 k개 시드 셀이 선택되고, 각 방 번호가 부여된 후, 주변 경계 셀을 따라 각 방의 공간이 확장되면서 초기 상태의 방 배치 완료되고, 최적화 과정이 적용된다. 



(a) Adjacency Reqruiement
(b) Orientation Reqruiement

(c) Size Requirement
Figure 6 Adjucency Reqruiement Setting

시드 셀 선택 과정에서는 세 가지 시드 셀 할당 전략–임의 배치, 인접성 우선 배치, 방향 우선 배치–이 다양한 조합으로 사용되어 설계 결과의 다양성을 증대시킨다. 제5장의 실험 결과에 따르면, 이 세 가지 전략을 병행했을 때 평면 배치의 적합도 평가에서 평균적으로 가장 높은 성능을 보였다. 그러나 최적화 전략의 다양한 조합에 따라 개별 설계 결과는 장단점이 존재함을 확인하였다. 
방 번호 할당 후, 공간 확장 단계에서는 각 방의 최대 크기 제한을 적용하는 크기 최적화가 선택적으로 적용된다. 제5장의 실험 결과에 따르면, 크기 최적화를 적용했을 때 방의 면적 요구사항 충족도가 크게 향상되었으며, 이를 통해 전체 공간 효율성 또한 극대화되었다. 그러나 크기 최적화는 방의 정형성과 규칙성에 부정적인 영향을 미칠 수 있어, 이 전략의 적용 여부는 프로젝트의 특성에 따라 사용자가 선택하도록 한다. 
돌출 셀 최적화은 돌출된 셀의 수를 최소화하여 방의 형태를 안정화하는 과정이다. 돌출 셀이 존재하지 않거나, 교착 상태가 발생하지 않는 한 반복적으로 돌출 셀의 방을 이웃 방으로 교환한다. 이 과정은 무작위로 돌출 셀을 선택하여 다양한 설계 가능성을 탐색하는 데 유용하지만, 모든 경우에 돌출 셀이 최소화된 배치를 보장하지는 않는다. 이를 보완하기 위해 돌출 셀의 출현이 0에 도달하거나 특정 시도 횟수까지 작업을 반복하여 최적의 결과를 선택한다. 
6.4 최적의 평면 배치 생성
PlanGen은 최적의 평면 배치를 생성하기 위한 다양한 옵션을 제공한다. 먼저, [Initial Room Location] 버튼은 시드 셀 할당 기능을 제공하며, 이를 통해 초기 방의 위치를 확인해 가며 원하는 배치 결과를 탐색할 수 있다. 
[Create Floor layout] 버튼을 클릭하면, 현재 설정된 시드 셀을 기반으로 평면 배치를 생성하고 각 요구사항 만족도 및 형태 만족도 지표와 함께 보여준다. 이를 바탕으로 사용자는 시드 셀에 대한 다양한 평면 배치를 반복적으로 생성할 수 있다.
 [Best Floor Layout Per Seed] 버튼은, 제 5장에서 확인한 바와 같이 동일 시드 셀 그룹 내에서 배치 성능의 결과 편차가 크다는 점을 이용하여, 동일한 시드 셀에 대해 가장 좋은 성능을 내는 배치를 선택할 수 있다. 이 기능은 같은 시드 셀에 대해, 지정한 횟수만큼 평면 배치를 반복 생성한 후, 가장 적합도가 높은 평면 배치 제공한다. 
[Generate Until Optimal] 기능은 지정된 문턱값을 만족하는 성능이 나올 때까지, 또는 최대 시도 횟수에 도달할 때까지 평면 배치 생성을 반복하여 최적의 배치를 탐색하는 방법이다. 이 기능은 적합도 가중 평균이 지정한 문턱값에 도달하면 해당 평면 배치를, 그렇지 않으면 최대 시도 횟수 내에서 가장 성능이 좋은 평면 배치를 반환한다. 
Figure 6은 이 기능을 사용하여 35개의 최적 배치를 생성한 예시로, 각 평면 배치 하단에는 인접성 만족도, 방향성 만족도, 크기 만족도, 그리고 가중 평균이 표시되었다.  문턱값은 0.95로, 최대 시도 횟수는 100회로 설정되었다. 인접성 만족도와 방향성 만족도는 모든 평면 배치에서 최대값 1을 기록했고, 크기 만족도는 이보다 약간 낮았지만 대부분 높은 적합도를 보였다. 총 35번의 실행 중 단 한 번만 문턱값을 넘지 못하고 최대 시도 횟수에 도달했으나, 그 경우에도 평균은 0.94로 문턱값에 매우 근접한 수치를 기록했다. 
다중 목표 설정과 높은 문턱값에도 불구하고, 각 방의 형태, 크기, 위치, 위상관계 등에서 모든 평면 배치가 서로 다르게 나타나 다양성이 높았으며 적합성 또한 우수했다. 각 평면 배치의 생성 시도 횟수는 평균 32.4회, 중간값 24회, 최소 1회, 최대 100회로 기록되었으며, 표준편차는 25.43으로 시도 횟수의 변동성이 큰 것으로 확인되었다. 
6.5 
핵심 모듈에서부터 사용자 인터페이스까지 모두 파이썬 언어를 이용하여 작성하였으므로 이론적으로는 파이썬 언어가 해석가능한 모든 시스템에서 동작 가능하다. 여기서는 윈도우 운영 체제에서 코딩과 테스팅을 확인했으며, 파이썬 언어 모듈 외에 추가로 필요한 패키지는 없다. 메모리 및 GPU 등의 컴퓨터 성능 문턱 또한 낮아서, 10년된 오래된 컴퓨터에서도 동작한다. 그러나 처리 속도는 빨라서 평면 배치 작성은 즉석에서 이루어진다. 


Figure 6 Optimal Floorplans of 35


 영 체제에서 동작을 확인하였으나, 파이썬이 동작하는 모든 시스템 요구사항은 문턱은 매우 낮다. 
알고리즘 상 두 개의 공간에 배분하고 계단 및 엘리베이트 공간을 공유하면 다층 구조의 경우로 확장은 어렵지 않다. 하지만 아직 안했다. 인접 요구사항을 백퍼센트 만족하는 경우라 하더라도 인접을 허용하지 않는 경우를 상정하지 않아서 플랜이 어색한 경우가 있다. 예를 들어, 두 개의 욕실이 서로 붙어 있는 것은 필요가 없다. 이러한 비인접 요구사항을 적합성 계산에 추가하면 보다 정교한  평면 배치 생성이 가능할 것이다. 



















Figure 9. PlanGen Main Screen showing (a) seed cell allocation and (b) Floorplan creation by selecting [Initial Room Location] Button clicked and [Create Floorplan Button] Clicked afterwards 



































[표 내용 스타일 : Times New Roman 8pt]



REFERENCES[REFERENCES 제목 스타일 : 맑은고딕 9pt]

1. Michalek, J. J., Papalambros, P. Y., & Skerlos, S. J. (2002). "A weighted sum approach to multi-objective optimization in product platform design." *Journal of Mechanical Design*, 124(4), pp. 490-497.

2. Arvin, S. A., & House, D. H. (2002). "Modeling architectural design objectives in physically based space planning." *Automation in Construction*, 11(2), pp. 213-225.

3. Hemberg, M., Kieffer, S., & O'Reilly, U.-M. (2013). "Evolution of designs in Grammatical Evolution." *Proceedings of the 15th Annual Conference on Genetic and Evolutionary Computation*, pp. 587-594.

4. Eiben, A. E., Hinterding, R., & Michalewicz, Z. (2007). "Parameter control in evolutionary algorithms." *IEEE Transactions on Evolutionary Computation*, 3(2), pp. 124-141.

5. Schumacher, T., Vrachliotis, G., & Hirschberg, U. (2010). "Algorithmic architecture and complexity: Towards digital fabrication in architecture." *Nexus Network Journal*, 12(1), pp. 5-14.
6. Ostwald, M.J., & Dawes, M.J. (2018). Space Syntax, Theory and Techniques. In The Mathematics of the Modernist Villa. Mathematics and the Built Environment, vol. 3. Birkhäuser, Cham. https://doi.org/10.1007/978-3-319-71647-3_2
6. Wang, H., Wang, Z., & Zheng, D. (2013). "Optimization of irregular building shapes to improve energy efficiency." *Energy and Buildings*, 66, pp. 225-235.

7. Deb, K., Pratap, A., Agarwal, S., & Meyarivan, T. (2002). "A fast and elitist multiobjective genetic algorithm: NSGA-II." *IEEE Transactions on Evolutionary Computation*, 6(2), pp. 182-197.

8. Turrin, M., von Buelow, P., & Stouffs, R. (2011). "Design explorations of performance driven geometry in architectural design using parametric modeling and genetic algorithms." *Automation in Construction*, 20(1), pp. 71-79.

9. Lerman, S. (1975). A Disaggregate Behavioral Model of Urban Mobility Decisions, Ph.D. Dissertation, M.I.T.
10. Luce, R. (1959). Individual Choice Behavior, New York, John Wiley & Sons, 138-140.



.................................................................................................
논문작성을 위한 추가 안내사항

1. Table, Figure, REFERENCES 등에서 영어(로마자)로 표기하되 국어를 병기할 수 있으며, 한자표기가 불가피한 성명, 건물명, 지명, 문헌명 등이 있는 경우에도 한자표기를 병기할 수 있다.  (예) Injeonjeon(仁政殿)

2. 참고문헌의 기재순서는 제1저자명의 알파벳순으로 한다.

3. 참고문헌에서의 저자는 전원 표기하며, 저자가 다수일 경우, 마지막 저자명 앞에 &를 표기한다.
	(예) 6. Kim, B. J., Kim, H. J., & Ha, Y. C. (2014). 

4. 논문작성 후 전체적으로 Table, Figure, REFERENCES 일련번호 순서를 확인한다.

5. 저자는, 처음 논문투고시 투고시스템에서 저자명을 입력한대로 게재까지 진행된다(미납시 회비납부, 비회원은 회원가입후 가능). 
	- 저자는 연구를 계획하며 데이터 수집 및 분석에 실질적 기여를 하거나 논문에서 중요한 내용을 작성 및 수정, 최종 검토 및 승인 또는 연구의 모든 측면에 대해 책임을 지는 자로 구성한다.(연구윤리규정 제2장제6조①항 발췌)
.................................................................................................